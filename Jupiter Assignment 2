## Assignment #1 Documentation Template  
  
Each assignment/project we complete in this class should be documented in your own 
GitHub repository.  I recommend that you organize your project files into 
separate folders and document it using a `README.md` file written in 
text-based *Markdown* format (.md)  
  
Please review the [GitHub Markdown Tutorial](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax) 
to learn how to on how to use this format. This page is the recommended structure for your 
documentation and you can check its [raw version](https://github.com/pa-nik/FA24-IXD-256/edit/main/assignment01/README.md) 
to see the Markdown code.  
  
Think of this documentation as project explanation and a resource for 
yourself, as well as someone new who could be coming across your project online. 

### Introduction

Provide a description of your initial project idea and include images of 
the concept sketches that you created in Part 1 of this assignment.  

### State Diagram

Explain the interactive behaviors of the prototype you created and include a 
state diagram (flowchart) to represent it.  For example, below is an example 
state diagram included in the assignment description:  

![state diagram example](state-diagram-example.jpg)  

### Hardware

List all the separate hardware components used in your project and briefly 
explain what they do. To create a list with markdown syntax, 
use `-`, `*`, or `+` characters with each line of text:  
* item 1  
* item 2   
* etc.  

Include at least one image showing your hardware wiring. You can draw the wiring 
connections by hand, use a graphical program, or take close-up photo(s).  

### Firmware   

import os, sys, io
import M5
from M5 import *
from hardware import *
from unit import IMUProUnit
import time

i2c0 = None
imupro_0 = None
IMU_data = None
inputX = 0
inputY = 0
inputA = 0

def inputdetection():
    global inputX, inputY, inputA
    Xvalue = IMU_data[0]
    Yvalue = IMU_data[1]
    #print(Xvalue,",",Yvalue)
    if abs(Xvalue) > 0.3:
        if Xvalue > 0:
            inputX = -1
        else:
            inputX = 1
    else:
        inputX = 0

    if abs(Yvalue) > 0.3:
        if Yvalue > 0:
            inputY = -1
        else: 
            inputY = 1
    else:
        inputY = 0
        
    if pin1.value():
        inputA = 0
    else:
        inputA = 1
    
M5.begin()
i2c0 = I2C(0, scl=Pin(39), sda=Pin(38), freq=100000)
imupro_0 = IMUProUnit(i2c0)
pin1 = Pin(1, mode=Pin.IN, pull=Pin.PULL_UP)

while True:
    M5.update()
    IMU_data = imupro_0.get_accelerometer()
    #print(IMU_data)
    inputdetection()
    print(inputX,",",inputY,",",inputA) #output
    time.sleep_ms(50)
 
### Physical Components   

Explain what products, materials or components you used for the project. 
If you fabricated your own project components, include some details on 
how you made them.

### Project outcome  

Summarize the results of your project implementation and include at least 
1 photo of the finished prototype.  

Finally, include a short video walkthrough of your project showing all of 
its functioning aspects (voice over is optional but could be helpful).  

Note that GitHub has a small size limit for uploading files via browswer (25Mb max), 
so you may choose to use a link to YouTube, Google Drive, or another external site.
